model Tutor {
  id            String         @id @default(cuid())
  email         String         @unique
  courses       Course[]       @relation("TutorCourses")
  adminCourses  Course[]       @relation("AdminCourses")
  studentGroups StudentGroup[]

  @@index([email])
}

model Student {
  id            String         @id @default(cuid())
  email         String         @unique
  courses       Course[]
  studentGroups StudentGroup[]
  assignments   Assignment[]
  submissions   Submission[]

  @@index([email])
}

model StudentGroup {
  id          String       @id @default(cuid())
  name        String
  students    Student[]
  courseId    String
  managerId   String
  course      Course       @relation(fields: [courseId], references: [id])
  manager     Tutor        @relation(fields: [managerId], references: [id])
  assignments Assignment[]
}

model Course {
  id            String          @id @unique
  title         String
  createdOn     DateTime        @default(now())
  updatedOn     DateTime        @default(now())
  tutors        Tutor[]         @relation("TutorCourses")
  AdminId       String
  courseAdmin   Tutor           @relation("AdminCourses", fields: [AdminId], references: [id])
  students      Student[]
  studentGroups StudentGroup[]
  announcements Announcements[]
  description   Description[]
  topics        Topic[]
  assignments   Assignment[]
}

model Announcements {
  id               String   @id @default(cuid())
  title            String
  description      String
  announcementDate DateTime @default(now())
  courseId         String
  course           Course   @relation(fields: [courseId], references: [id])
}

model Description {
  id             String @id @default(cuid())
  summary        String
  subjectDetails String
  courseId       String
  course         Course @relation(fields: [courseId], references: [id])
}

model Topic {
  id          String     @id @default(cuid())
  title       String
  description String
  courseId    String
  course      Course     @relation(fields: [courseId], references: [id])
  resources   Resource[]
  parentId    String?
  parentTopic Topic?     @relation("TopicToSubTopic", fields: [parentId], references: [id])
  subTopics   Topic[]    @relation("TopicToSubTopic")
}

model Resource {
  id           String  @id @default(cuid())
  title        String
  description  String
  courseId     String
  topicId      String
  topic        Topic   @relation(fields: [topicId], references: [id])
  videoContent String?
  documentFile String
  richText     String
}

model Assignment {
  id            String         @id @default(cuid())
  quizzes       Quiz[]
  Submissions   Submission[]
  courseId      String
  course        Course         @relation(fields: [courseId], references: [id])
  students      Student[]
  studentGroups StudentGroup[]
}

model Quiz {
  id           String     @id @default(cuid())
  title        String
  description  String
  releaseDate  DateTime   @default(now())
  dueDate      DateTime
  Status       String
  assignmentId String
  assignment   Assignment @relation(fields: [assignmentId], references: [id])
}

model Submission {
  id             String     @id @default(cuid())
  submissionDate DateTime   @default(now())
  releaseDate    DateTime
  assignmentId   String
  assignment     Assignment @relation(fields: [assignmentId], references: [id])
  submittedBy    Student[]
}
